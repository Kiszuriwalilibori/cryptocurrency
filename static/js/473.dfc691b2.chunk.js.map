{"version":3,"file":"static/js/473.dfc691b2.chunk.js","mappings":"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","sources":["pages/ResultsPage/ResultsPage.tsx","pages/ResultsPage/parts/ResultsTable.tsx","pages/ResultsPage/parts/CryptoCurrencyCurrentPrice.tsx","pages/ResultsPage/parts/GeneralInformation.tsx","pages/ResultsPage/parts/InvestButton.tsx","pages/ResultsPage/parts/Logo.tsx","pages/ResultsPage/parts/Changes.tsx","pages/ResultsPage/parts/ResultsPageHeader.tsx","pages/ResultsPage/parts/styles.tsx"],"sourcesContent":["import * as React from \"react\";\r\n\r\nimport {\r\n    useObserveCurrentCryptoPrice,\r\n    useSetInitialHistoricalPrices,\r\n    useReturnToSelection,\r\n    useObserveHistoricalPrices,\r\n    useIsCurrentPriceSet,\r\n} from \"hooks\";\r\n\r\nimport { BlueButton } from \"components\";\r\nimport { ResultsPageHeader } from \"./parts\";\r\n\r\nconst ResultsTable = React.lazy(() => import(\"./parts/ResultsTable\"));\r\n\r\n/**\r\n * Presents cryptocurrency price current and historical\r\n * @returns component\r\n */\r\nconst ResultsPage = (): JSX.Element => {\r\n    const returnToSelection = useReturnToSelection();\r\n    const isCurrentPriceSet = useIsCurrentPriceSet();\r\n\r\n    useSetInitialHistoricalPrices();\r\n    useObserveHistoricalPrices();\r\n    useObserveCurrentCryptoPrice();\r\n\r\n    return (\r\n        <>\r\n            <ResultsPageHeader text=\"Results of query\" />\r\n            <main>\r\n                {isCurrentPriceSet && <BlueButton label=\"Powrót do wyboru\" clickHandler={returnToSelection} />}\r\n                {isCurrentPriceSet && (\r\n                    <React.Suspense fallback={null}>\r\n                        <ResultsTable />\r\n                    </React.Suspense>\r\n                )}\r\n            </main>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ResultsPage;\r\n","import \"../styles/_ResultsTable.scss\";\r\n\r\nimport React from \"react\";\r\n\r\nimport { Grow } from \"@mui/material\";\r\n\r\nimport { Changes, CryptoCurrencyCurrentPrice, GeneralInformation, InvestButton, Logo } from \".\";\r\nimport { CryptoContainer } from \"./styles\";\r\nimport { SelectedCurrenciesContext } from \"contexts/currenciesContext\";\r\n\r\n/**\r\n * creates array with all provided informations about crypto\r\n * @param props\r\n * @returns\r\n */\r\nconst ResultsTable = () => {\r\n    const {\r\n        currencyCrypto: { label, imageURL },\r\n    } = React.useContext(SelectedCurrenciesContext);\r\n\r\n    return (\r\n        <CryptoContainer>\r\n            <Grow in={true} timeout={1000}>\r\n                <section className=\"DataContainer\" aria-label=\"query data\">\r\n                    <GeneralInformation currencyCryptoName={label} />\r\n                    {imageURL && <Logo imageURL={imageURL} />}\r\n                    <div className=\"PricesWithButtons\">\r\n                        <CryptoCurrencyCurrentPrice />\r\n                        {<Changes />}\r\n                        <InvestButton />\r\n                    </div>\r\n                </section>\r\n            </Grow>\r\n        </CryptoContainer>\r\n    );\r\n};\r\n\r\nexport default ResultsTable;\r\n","import { Typography } from \"@mui/material\";\r\nimport \"../styles/_CurrentPrice.scss\";\r\n\r\nimport { SelectedCurrenciesContext } from \"contexts/currenciesContext\";\r\nimport { useContext } from \"react\";\r\nimport { useCurrentCryptoPrice } from \"store\";\r\nimport { CurrencyBase } from \"types/index\";\r\n/**\r\n * Displays cell with current cryptocurrency price\r\n * @returns component\r\n */\r\nconst formatCurrentPrice = (currentPrice: number, currencyBase: CurrencyBase) => {\r\n    const preformattedCurrentPrice =\r\n        currentPrice >= 1 ? Math.round(currentPrice * 100) / 100 : Math.round(currentPrice * 100000000) / 100000000;\r\n\r\n    const formattedCurrentPrice =\r\n        preformattedCurrentPrice.toString().length > 10\r\n            ? preformattedCurrentPrice.toExponential(2)\r\n            : preformattedCurrentPrice.toString();\r\n    const priceWithCoin = formattedCurrentPrice + \" \" + currencyBase;\r\n\r\n    return priceWithCoin;\r\n};\r\n\r\nconst CurrentPrice = () => {\r\n    const { currencyBase } = useContext(SelectedCurrenciesContext);\r\n    const current = useCurrentCryptoPrice.use.currentCryptoPrice();\r\n    const formattedCurrentCryptoPrice =\r\n        typeof current === \"number\" ? formatCurrentPrice(current, currencyBase) : \"Brak danych\";\r\n\r\n    return (\r\n        <div className=\"cell\">\r\n            <Typography variant=\"purpleText\">{formattedCurrentCryptoPrice}</Typography>\r\n            <Typography variant=\"greyText\">{\"Aktualna cena\"}</Typography>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CurrentPrice;\r\n","import { memo } from \"react\";\r\nimport \"../styles/_generalInformation.scss\";\r\n\r\ninterface Props {\r\n    currencyCryptoName: string;\r\n}\r\n/**\r\n * Renders general information about cryptocurrency\r\n * @param {string} name cryptocurrency nam\r\n * @returns memoised component\r\n */\r\nconst GeneralInfo = memo((props: Props) => {\r\n    const { currencyCryptoName } = props;\r\n    return (\r\n        <div className=\"GeneralInformation\">\r\n            <div className=\"title\">{currencyCryptoName}</div>\r\n            <div className=\"foundation\">{`${currencyCryptoName} foundation`}</div>\r\n            <div className=\"altcoins\">Altcoins - hightest growth</div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default GeneralInfo;\r\n","import Button from \"@mui/material/Button\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\n\r\nimport { memo } from \"react\";\r\n\r\nimport \"../styles/_InvestButton.scss\";\r\n\r\nconst tooltipStyle = {\r\n    backgroundColor: \"#F5C200\",\r\n    border: `1px solid \"#EE760A\"`,\r\n    boxShadow: `inset 0 0 5px \"#EE760A\"`,\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    fontSize: 11,\r\n};\r\n\r\n/**\r\n * creates button which could be in the future used for investing\r\n * @returns button component\r\n */\r\nconst InvestButton = () => {\r\n    return (\r\n        <div className=\"cell\">\r\n            <div className=\"InvestWrapper\">\r\n                <Tooltip\r\n                    componentsProps={{ tooltip: { sx: tooltipStyle } }}\r\n                    title=\"Ta funkcjonalność nie jest jeszcze zaimplementowana\"\r\n                    placement=\"top-start\"\r\n                >\r\n                    <Button variant=\"contained\" color=\"error\" size=\"small\">\r\n                        Inwestuj\r\n                    </Button>\r\n                </Tooltip>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(InvestButton);\r\n","import { BASE_URL } from \"config\";\r\n\r\ninterface Props {\r\n    imageURL: string;\r\n}\r\n/**\r\n * creates Logo of cryptocurrency. Firstly createscomplete URL\r\n * @param URL string being critical part of URL\r\n * @returns logo component\r\n */\r\nconst Logo = (props: Props) => {\r\n    const { imageURL } = props;\r\n\r\n    const cryptoLogoUrl = BASE_URL.get(\"general\") + imageURL + \"?width=30\";\r\n\r\n    return <img className=\"logo\" src={cryptoLogoUrl} alt={\"Logo\"} />;\r\n};\r\n\r\nexport default Logo;\r\n","import uuid from \"react-uuid\";\r\n\r\nimport { Typography } from \"@mui/material\";\r\nimport { useCreateChanges } from \"hooks\";\r\n\r\n/**\r\n * Creates table with historical price and percentage change\r\n *\r\n * @returns component with tabelarised data\r\n */\r\n\r\nconst Changes = () => {\r\n    const changes = useCreateChanges();\r\n    if (!changes) return null;\r\n\r\n    return (\r\n        <>\r\n            {changes.map(change => (\r\n                <div className=\"cell\" key={uuid()}>\r\n                    <Typography variant=\"purpleText\" key={uuid()}>\r\n                        {Object.values(change)[0]}\r\n                    </Typography>\r\n\r\n                    <Typography variant=\"greyText\" key={uuid()}>\r\n                        {Object.keys(change)[0]}\r\n                    </Typography>\r\n                </div>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Changes;\r\n","import React from \"react\";\n\ninterface Props {\n    text: string;\n}\n\nexport const ResultsPageHeader = (props: Props) => {\n    const { text } = props;\n    return (\n        <h1 role=\"banner\" className=\"sr-only\">\n            {text}\n        </h1>\n    );\n};\n\nexport default React.memo(ResultsPageHeader);\n","import { styled } from \"@mui/system\";\nimport { Box } from \"@mui/material\";\n\nexport const CryptoContainer = styled(Box)(({ theme }) => ({\n    width: \"100%\",\n    paddingRight: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    marginRight: \"auto\",\n    marginLeft: \"auto\",\n    marginTop: \"30vh\",\n}));\nexport default CryptoContainer;\n"],"names":["ResultsTable","React","returnToSelection","useReturnToSelection","isCurrentPriceSet","useIsCurrentPriceSet","useSetInitialHistoricalPrices","useObserveHistoricalPrices","useObserveCurrentCryptoPrice","text","label","clickHandler","fallback","currencyCrypto","imageURL","SelectedCurrenciesContext","Grow","in","timeout","className","currencyCryptoName","currencyBase","useContext","current","useCurrentCryptoPrice","formattedCurrentCryptoPrice","currentPrice","preformattedCurrentPrice","Math","round","toString","length","toExponential","formatCurrentPrice","Typography","variant","memo","props","tooltipStyle","backgroundColor","border","boxShadow","color","fontSize","InvestButton","Tooltip","componentsProps","tooltip","sx","title","placement","Button","size","cryptoLogoUrl","BASE_URL","src","alt","changes","useCreateChanges","map","change","Object","values","uuid","keys","ResultsPageHeader","role","CryptoContainer","styled","Box","theme","width","paddingRight","spacing","paddingLeft","marginRight","marginLeft","marginTop"],"sourceRoot":""}