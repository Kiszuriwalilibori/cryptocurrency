{"version":3,"file":"static/js/654.d4ec5c76.chunk.js","mappings":"qOAkCA,EApBgB,SAACA,GACb,IAAQC,EAAiBD,EAAjBC,aAER,OACI,8BACKA,EAAaC,KAAI,SAAAC,GAAM,OACpB,iBAAKC,UAAU,OAAM,WACjB,SAACC,EAAA,EAAU,CAACC,QAAQ,aAAY,SAC3BC,OAAOC,OAAOL,GAAQ,IADWM,QAItC,SAACJ,EAAA,EAAU,CAACC,QAAQ,WAAU,SACzBC,OAAOG,KAAKP,GAAQ,IADWM,SALbA,MAQrB,KAItB,ECTA,EAXqB,SAACT,GAClB,IAAQW,EAAiBX,EAAjBW,aAER,OACI,iBAAKP,UAAU,OAAM,WACjB,SAACC,EAAA,EAAU,CAACC,QAAQ,aAAY,SAAEC,OAAOC,OAAOG,GAAc,MAC9D,SAACN,EAAA,EAAU,CAACC,QAAQ,WAAU,SAAEC,OAAOG,KAAKC,GAAc,OAGtE,E,UCCA,GAXoBC,EAAAA,EAAAA,OAAK,SAACZ,GACxB,IAAQa,EAASb,EAATa,KACR,OACE,iBAAKT,UAAU,qBAAoB,WACjC,gBAAKA,UAAU,QAAO,SAAES,KACxB,gBAAKT,UAAU,aAAY,mBAAKS,EAAI,kBACpC,gBAAKT,UAAU,WAAU,SAAC,iCAGhC,I,oBCpBaU,EAAa,UAabC,EAAe,CACxBC,gBAAiB,UACjBC,OAAO,aAAD,OAAeH,GACrBI,UAAU,iBAAD,OAAmBJ,GAC5BK,MAAO,sBACPC,SAAU,ICPRC,EAAe,WACjB,OACI,gBAAKjB,UAAU,OAAM,UACjB,gBAAKA,UAAU,gBAAe,UAC1B,SAACkB,EAAA,EAAO,CACJC,gBAAiB,CAAEC,QAAS,CAAEC,GAAIV,IAClCW,MAAM,gEACNC,UAAU,YAAW,UAErB,SAACC,EAAA,EAAM,CAACtB,QAAQ,YAAYa,MAAM,QAAQU,KAAK,QAAO,SAAC,kBAO3E,EAEA,GAAejB,EAAAA,EAAAA,MAAKS,G,UCXpB,EARa,SAACrB,GACZ,IAAQ8B,EAAQ9B,EAAR8B,IAEDC,EAAgBC,EAAAA,GAAAA,IAAY,WAAaF,EAAM,YAEtD,OAAO,gBAAK1B,UAAU,OAAO6B,IAAKF,EAAeG,IAAK,GAAI,aAAY,6BACxE,E,UC0BA,EApBqB,SAAClC,GAClB,IAAQmC,EAA4BnC,EAA5BmC,eAAgBC,EAAYpC,EAAZoC,QAExB,OACI,SAAC,KAAe,WACZ,SAACC,EAAA,EAAI,CAACC,IAAI,EAAMC,QAAS,IAAK,UAC1B,iBAAKnC,UAAU,gBAAe,WAC1B,SAACoC,EAAkB,CAAC3B,KAAMsB,EAAeM,QACxCN,EAAeO,QAAS,SAAC,EAAI,CAACZ,IAAKK,EAAeO,SACnD,iBAAKtC,UAAU,oBAAmB,UAC7BgC,EAASzB,eAAgB,SAAC,EAAY,CAACA,aAAcyB,EAASzB,eAC9DyB,EAASO,UAAW,SAAC,EAAO,CAAC1C,aAAcmC,EAASO,WACrD,SAAC,EAAY,aAMrC,C","sources":["pages/ResultsPage/parts/Changes/Changes.tsx","pages/ResultsPage/parts/CurrentPrice/CurrentPrice.tsx","pages/ResultsPage/parts/GeneralInformation/GeneralInformation.tsx","styles/sxStyles.ts","pages/ResultsPage/parts/InvestButton/InvestButton.tsx","pages/ResultsPage/parts/Logo.tsx","pages/ResultsPage/parts/ResultsTable.tsx"],"sourcesContent":["import { Typography } from \"@mui/material\";\r\nimport uuid from \"react-uuid\";\r\n\r\nimport { ChangesArray } from \"types\";\r\n\r\ninterface Props {\r\n    changesArray: ChangesArray;\r\n}\r\n/**\r\n * Creates table with historical price and percentage change\r\n * @param changesArray data to be displayed\r\n * @returns component with tabelarised data\r\n */\r\n\r\nconst Changes = (props: Props): JSX.Element => {\r\n    const { changesArray } = props;\r\n\r\n    return (\r\n        <>\r\n            {changesArray.map(change => (\r\n                <div className=\"cell\" key={uuid()}>\r\n                    <Typography variant=\"purpleText\" key={uuid()}>\r\n                        {Object.values(change)[0]}\r\n                    </Typography>\r\n\r\n                    <Typography variant=\"greyText\" key={uuid()}>\r\n                        {Object.keys(change)[0]}\r\n                    </Typography>\r\n                </div>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Changes;\r\n","import { Typography } from \"@mui/material\";\r\nimport \"./_CurrentPrice.scss\";\r\n\r\n/**\r\n * Displays cell with current cryptocurrency price\r\n * @param props object with current cryptocurrency price data\r\n * @returns component\r\n */\r\ninterface Props {\r\n    currentPrice: { [key: string]: string };\r\n}\r\n\r\nconst CurrentPrice = (props: Props) => {\r\n    const { currentPrice } = props;\r\n\r\n    return (\r\n        <div className=\"cell\">\r\n            <Typography variant=\"purpleText\">{Object.values(currentPrice)[0]}</Typography>\r\n            <Typography variant=\"greyText\">{Object.keys(currentPrice)[0]}</Typography>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CurrentPrice;\r\n","import { memo } from \"react\";\r\nimport \"./_generalInformation.scss\";\r\n\r\ninterface Props {\r\n  name: string;\r\n}\r\n/**\r\n * Renders general information about cryptocurrency\r\n * @param {string} name cryptocurrency nam\r\n * @returns memoised component\r\n */\r\nconst GeneralInfo = memo((props: Props) => {\r\n  const { name } = props;\r\n  return (\r\n    <div className=\"GeneralInformation\">\r\n      <div className=\"title\">{name}</div>\r\n      <div className=\"foundation\">{`${name} foundation`}</div>\r\n      <div className=\"altcoins\">Altcoins - hightest growth</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default GeneralInfo;\r\n","export const localBrown = \"#EE760A\";\r\n\r\nexport const loaderContainerStyle = {\r\n    margin: \"0 auto\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    height: \"100vh\",\r\n    alignItems: \"center\",\r\n    background: \"transparent\",\r\n    paddingTop: \"10vh\",\r\n    justifyContent: \"center\",\r\n};\r\n\r\nexport const tooltipStyle = {\r\n    backgroundColor: \"#F5C200\",\r\n    border: `1px solid ${localBrown}`,\r\n    boxShadow: `inset 0 0 5px ${localBrown}`,\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    fontSize: 11,\r\n};\r\n","import { memo } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport { tooltipStyle } from \"styles/sxStyles\";\r\n\r\nimport \"./_InvestButton.scss\";\r\n\r\n/**\r\n * creates button which could be in the future used for investing\r\n * @returns button component\r\n */\r\nconst InvestButton = () => {\r\n    return (\r\n        <div className=\"cell\">\r\n            <div className=\"InvestWrapper\">\r\n                <Tooltip\r\n                    componentsProps={{ tooltip: { sx: tooltipStyle } }}\r\n                    title=\"Ta funkcjonalność nie jest jeszcze zaimplementowana\"\r\n                    placement=\"top-start\"\r\n                >\r\n                    <Button variant=\"contained\" color=\"error\" size=\"small\">\r\n                        Inwestuj\r\n                    </Button>\r\n                </Tooltip>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(InvestButton);\r\n","import { baseURL } from \"config\";\r\n\r\ninterface Props {\r\n  URL: string;\r\n}\r\n/**\r\n * creates Logo of cryptocurrency. Firstly createscomplete URL\r\n * @param URL string being critical part of URL\r\n * @returns logo component\r\n */\r\nconst Logo = (props: Props) => {\r\n  const { URL } = props;\r\n  \r\n   const cryptoLogoUrl = baseURL.get(\"general\") + URL + \"?width=30\";\r\n\r\n  return <img className=\"logo\" src={cryptoLogoUrl} alt={\"\"} aria-label={\"cryptocurrency logo image\"} />;\r\n};\r\n\r\nexport default Logo;\r\n","import { Grow } from \"@mui/material\";\r\n\r\nimport Changes from \"./Changes\";\r\nimport CurrentPrice from \"./CurrentPrice\";\r\nimport GeneralInformation from \"./GeneralInformation\";\r\nimport InvestButton from \"./InvestButton\";\r\nimport Logo from \"./Logo\";\r\n\r\nimport { CryptoContainer } from \"styles/styled\";\r\nimport { CurrencyCrypto, ResultsType } from \"types\";\r\n\r\nimport \"./_ResultsTable.scss\";\r\n\r\ninterface Props {\r\n    currencyCrypto: CurrencyCrypto;\r\n    results: ResultsType;\r\n}\r\n/**\r\n * creates array with all provided informations about crypto\r\n * @param props\r\n * @returns\r\n */\r\nconst ResultsTable = (props: Props) => {\r\n    const { currencyCrypto, results } = props;\r\n\r\n    return (\r\n        <CryptoContainer>\r\n            <Grow in={true} timeout={1000}>\r\n                <div className=\"DataContainer\">\r\n                    <GeneralInformation name={currencyCrypto.label} />\r\n                    {currencyCrypto.image && <Logo URL={currencyCrypto.image} />}\r\n                    <div className=\"PricesWithButtons\">\r\n                        {results!.currentPrice && <CurrentPrice currentPrice={results!.currentPrice} />}\r\n                        {results!.changes && <Changes changesArray={results!.changes} />}\r\n                        <InvestButton />\r\n                    </div>\r\n                </div>\r\n            </Grow>\r\n        </CryptoContainer>\r\n    );\r\n};\r\n\r\nexport default ResultsTable;\r\n"],"names":["props","changesArray","map","change","className","Typography","variant","Object","values","uuid","keys","currentPrice","memo","name","localBrown","tooltipStyle","backgroundColor","border","boxShadow","color","fontSize","InvestButton","Tooltip","componentsProps","tooltip","sx","title","placement","Button","size","URL","cryptoLogoUrl","baseURL","src","alt","currencyCrypto","results","Grow","in","timeout","GeneralInformation","label","image","changes"],"sourceRoot":""}