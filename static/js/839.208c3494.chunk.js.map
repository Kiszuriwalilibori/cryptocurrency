{"version":3,"file":"static/js/839.208c3494.chunk.js","mappings":"8NAgCA,EAnBgB,SAACA,GACf,IAAQC,EAAiBD,EAAjBC,aAER,OACE,8BACGA,EAAaC,KAAI,SAAAC,GAAM,OACtB,iBAAKC,UAAU,OAAf,WACE,gBAAKA,UAAU,QAAf,SACGC,OAAOC,OAAOH,GAAQ,IADGI,GAAAA,KAG5B,gBAAKH,UAAU,OAAf,SACGC,OAAOG,KAAKL,GAAQ,IADII,GAAAA,MAJFA,GAAAA,U,oBCLnC,GAXgCE,EAAAA,EAAAA,GAAW,CACvCC,KAAM,CACFC,MAAO,OACPC,aAAc,OACdC,YAAa,OACbC,YAAa,OACbC,WAAY,OACZC,UAAW,SAPaP,CAS7BQ,EAAAA,GCUH,EAXqB,SAACjB,GACpB,IAAQkB,EAAiBlB,EAAjBkB,aAER,OACE,iBAAKd,UAAU,OAAf,WACE,gBAAKA,UAAU,QAAf,SAAwBC,OAAOC,OAAOY,GAAc,MACpD,gBAAKd,UAAU,OAAf,SAAuBC,OAAOG,KAAKU,GAAc,S,UCKvD,GAXoBC,EAAAA,EAAAA,OAAK,SAACnB,GACxB,IAAQoB,EAASpB,EAAToB,KACR,OACE,iBAAKhB,UAAU,qBAAf,WACE,gBAAKA,UAAU,QAAf,SAAwBgB,KACxB,gBAAKhB,UAAU,aAAf,mBAAgCgB,EAAhC,kBACA,gBAAKhB,UAAU,WAAf,8C,uCCFN,GAVgBK,EAAAA,EAAAA,IAAW,iBAAO,CAChCY,QAAS,CACPC,gBAAiB,UACjBC,OAAQ,oBACRC,UAAW,wBACXC,MAAO,sBACPC,SAAU,OANEjB,CAQZkB,EAAAA,I,uCCAEC,EAAgBC,EAAAA,GAAAA,IAAH,05BAgBGC,EAUAC,EAUAC,EAUAC,GAOhBC,EAAe,WACnB,OACE,gBAAK9B,UAAU,OAAf,UACE,SAACwB,EAAD,WACE,SAAC,EAAD,CAASO,MAAM,gEAAsDC,UAAU,YAA/E,UACE,SAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYb,MAAM,YAAYc,KAAK,QAAnD,6BASV,GAAepB,EAAAA,EAAAA,MAAKe,GCjEpB,EAPa,SAAClC,GACZ,IACMwC,EAAgBC,gCADNzC,EAAR0C,IAC4D,YAEpE,OAAO,gBAAKtC,UAAU,OAAOuC,IAAKH,EAAeI,IAAK,GAAI,aAAY,+BC8BxE,EApBqB,SAAC5C,GACpB,IAAQ6C,EAA4B7C,EAA5B6C,eAAgBC,EAAY9C,EAAZ8C,QAExB,OACE,SAAC,EAAD,WACE,SAACC,EAAA,EAAD,CAAMC,IAAI,EAAMC,QAAS,IAAzB,UACE,iBAAK7C,UAAU,gBAAf,WACE,SAAC8C,EAAD,CAAoB9B,KAAMyB,EAAeM,QACxCN,EAAeO,QAAS,SAAC,EAAD,CAAMV,IAAKG,EAAeO,SACnD,iBAAKhD,UAAU,oBAAf,UACG0C,EAAS5B,eAAgB,SAAC,EAAD,CAAcA,aAAc4B,EAAS5B,eAC9D4B,EAASO,UAAW,SAAC,EAAD,CAASpD,aAAc6C,EAASO,WACrD,SAAC,EAAD,gB","sources":["pages/ResultsPage/parts/Changes/Changes.tsx","pages/ResultsPage/parts/CryptoCurrencyContainer.tsx","pages/ResultsPage/parts/CurrentPrice/CurrentPrice.tsx","pages/ResultsPage/parts/GeneralInformation/GeneralInformation.tsx","pages/ResultsPage/parts/Tooltip.tsx","pages/ResultsPage/parts/InvestButton.tsx","pages/ResultsPage/parts/Logo.tsx","pages/ResultsPage/parts/ResultsTable.tsx"],"sourcesContent":["import uuid from \"react-uuid\";\r\n\r\nimport { ChangesArray } from \"types\";\r\n\r\ninterface Props {\r\n  changesArray: ChangesArray;\r\n}\r\n/**\r\n * Creates table with historical price and percentage change\r\n * @param changesArray data to be displayed\r\n * @returns component with tabelarised data\r\n */\r\n\r\nconst Changes = (props: Props): JSX.Element => {\r\n  const { changesArray } = props;\r\n\r\n  return (\r\n    <>\r\n      {changesArray.map(change => (\r\n        <div className=\"cell\" key={uuid()}>\r\n          <div className=\"value\" key={uuid()}>\r\n            {Object.values(change)[0]}\r\n          </div>\r\n          <div className=\"name\" key={uuid()}>\r\n            {Object.keys(change)[0]}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Changes;\r\n","import { withStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst CryptoCurrencyContainer = withStyles({\r\n    root: {\r\n        width: '100%',\r\n        paddingRight: '15px',\r\n        paddingLeft: '15px',\r\n        marginRight: 'auto',\r\n        marginLeft: 'auto',\r\n        marginTop: '30vh',\r\n    },\r\n})(Box);\r\n\r\nexport default CryptoCurrencyContainer;\r\n","import \"./_CurrentPrice.scss\";\r\n\r\n/**\r\n * Displays cell with current cryptocurrency price\r\n * @param props object with current cryptocurrency price data\r\n * @returns component\r\n */\r\ninterface Props {\r\n  currentPrice: { [key: string]: string };\r\n}\r\n\r\nconst CurrentPrice = (props: Props) => {\r\n  const { currentPrice } = props;\r\n\r\n  return (\r\n    <div className=\"cell\">\r\n      <div className=\"value\">{Object.values(currentPrice)[0]}</div>\r\n      <div className=\"name\">{Object.keys(currentPrice)[0]}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentPrice;\r\n\r\n/**\r\n * todo jakieś zabezpieczenie przed superdługą ceną patrze PetroDolar\r\n */\r\n","import { memo } from \"react\";\r\nimport \"./_generalInformation.scss\";\r\n\r\ninterface Props {\r\n  name: string;\r\n}\r\n/**\r\n * Renders general information about cryptocurrency\r\n * @param {string} name cryptocurrency nam\r\n * @returns memoised component\r\n */\r\nconst GeneralInfo = memo((props: Props) => {\r\n  const { name } = props;\r\n  return (\r\n    <div className=\"GeneralInformation\">\r\n      <div className=\"title\">{name}</div>\r\n      <div className=\"foundation\">{`${name} foundation`}</div>\r\n      <div className=\"altcoins\">Altcoins - hightest growth</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default GeneralInfo;\r\n","import { withStyles } from \"@material-ui/core/styles\";\r\nimport _Tooltip from \"@material-ui/core/Tooltip\";\r\n/**\r\n * Tooltip component\r\n */\r\nconst Tooltip = withStyles(() => ({\r\n  tooltip: {\r\n    backgroundColor: \"#F5C200\",\r\n    border: \"1px solid #EE760A\",\r\n    boxShadow: \"inset 0 0 5px #EE760A\",\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    fontSize: 11,\r\n  },\r\n}))(_Tooltip);\r\n\r\nexport default Tooltip;\r\n","import { memo } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport styled from \"styled-components\";\r\n\r\n//import { PriceTableCell } from \"./PriceTableCell\";\r\n\r\nimport Tooltip from \"./Tooltip\";\r\n\r\nimport oko from \"graphics/oko.webp\";\r\nimport waga from \"graphics/waga.webp\";\r\nimport waga_hover from \"graphics/wagahover.webp\";\r\nimport oko_hover from \"graphics/okohover.webp\";\r\n\r\nconst InvestWrapper = styled.div`\r\n  width: 109px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n  height: 75px;\r\n  &::before {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    width: 26px;\r\n    height: 20px;\r\n    bottom: 0px;\r\n    left: 25px;\r\n    background: url(${oko});\r\n  }\r\n  &::after {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    width: 25px;\r\n    height: 20px;\r\n    bottom: 0px;\r\n    right: 25px;\r\n    background: url(${waga});\r\n  }\r\n  &:hover::after {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    width: 25px;\r\n    height: 20px;\r\n    bottom: 0px;\r\n    right: 25px;\r\n    background: url(${waga_hover});\r\n  }\r\n  &:hover::before {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    width: 25px;\r\n    height: 20px;\r\n    bottom: 0px;\r\n    right: 25px;\r\n    background: url(${oko_hover});\r\n  }\r\n`;\r\n/**\r\n * creates button which could be in the future used for investing\r\n * @returns button component\r\n */\r\nconst InvestButton = () => {\r\n  return (\r\n    <div className=\"cell\">\r\n      <InvestWrapper>\r\n        <Tooltip title=\"Ta funkcjonalność nie jest jeszcze zaimplementowana\" placement=\"top-start\">\r\n          <Button variant=\"contained\" color=\"secondary\" size=\"small\">\r\n            Inwestuj\r\n          </Button>\r\n        </Tooltip>\r\n      </InvestWrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(InvestButton);\r\n\r\n/**\r\n * todo zamienić na css\r\n */\r\n","interface Props {\r\n  URL: string;\r\n}\r\n/**\r\n * creates Logo of cryptocurrency. Firstly createscomplete URL\r\n * @param URL string being critical part of URL\r\n * @returns logo component\r\n */\r\nconst Logo = (props: Props) => {\r\n  const { URL } = props;\r\n  const cryptoLogoUrl = process.env.REACT_APP_CRYPTOS_GENERAL + URL + \"?width=30\";\r\n\r\n  return <img className=\"logo\" src={cryptoLogoUrl} alt={\"\"} aria-label={\"cryptocurrency logo image\"} />;\r\n};\r\n\r\nexport default Logo;\r\n","import { Grow } from \"@material-ui/core\";\r\n\r\nimport Changes from \"./Changes\";\r\nimport CryptoCurrencyContainer from \"./CryptoCurrencyContainer\";\r\nimport CurrentPrice from \"./CurrentPrice\";\r\nimport GeneralInformation from \"./GeneralInformation\";\r\nimport InvestButton from \"./InvestButton\";\r\nimport Logo from \"./Logo\";\r\n\r\nimport { CurrencyCrypto, ResultsType } from \"types\";\r\n\r\nimport \"./_Results.scss\";\r\n\r\ninterface Props {\r\n  currencyCrypto: CurrencyCrypto;\r\n  results: ResultsType;\r\n}\r\n/**\r\n * creates array with all provided informations about crypto\r\n * @param props\r\n * @returns\r\n */\r\nconst ResultsTable = (props: Props) => {\r\n  const { currencyCrypto, results } = props;\r\n\r\n  return (\r\n    <CryptoCurrencyContainer>\r\n      <Grow in={true} timeout={1000}>\r\n        <div className=\"DataContainer\">\r\n          <GeneralInformation name={currencyCrypto.label} />\r\n          {currencyCrypto.image && <Logo URL={currencyCrypto.image} />}\r\n          <div className=\"PricesWithButtons\">\r\n            {results!.currentPrice && <CurrentPrice currentPrice={results!.currentPrice} />}\r\n            {results!.changes && <Changes changesArray={results!.changes} />}\r\n            <InvestButton />\r\n          </div>\r\n        </div>\r\n      </Grow>\r\n    </CryptoCurrencyContainer>\r\n  );\r\n};\r\n\r\nexport default ResultsTable;\r\n\r\n/**\r\n * todo .DataConteiner jest w ogólnym, wycignąć\r\n */\r\n"],"names":["props","changesArray","map","change","className","Object","values","uuid","keys","withStyles","root","width","paddingRight","paddingLeft","marginRight","marginLeft","marginTop","Box","currentPrice","memo","name","tooltip","backgroundColor","border","boxShadow","color","fontSize","_Tooltip","InvestWrapper","styled","oko","waga","waga_hover","oko_hover","InvestButton","title","placement","Button","variant","size","cryptoLogoUrl","process","URL","src","alt","currencyCrypto","results","Grow","in","timeout","GeneralInformation","label","image","changes"],"sourceRoot":""}