{"version":3,"file":"static/js/200.62829bbd.chunk.js","mappings":"2KA0BA,UAX6B,SAACA,GAC5B,IAAQC,EAA0BD,EAA1BC,OAAQC,EAAkBF,EAAlBE,MAAOC,EAAWH,EAAXG,OACjBC,GAAcC,EAAAA,EAAAA,MAIpB,OAFAH,GAASE,EAAYF,MAAM,qDAAD,OAA4CC,EAAM,wCAEvEF,EAEE,MAFa,SAAC,KAAM,GAG7B,C","sources":["pages/ResultsPage/parts/FetchStatusIndicator.tsx"],"sourcesContent":["import { useMessage } from \"hooks\";\r\nimport { Loader } from \"components\";\r\n\r\ninterface Props {\r\n  result: boolean;\r\n  error: unknown;\r\n  crypto: string;\r\n}\r\n/**\r\n * creates indicators for loading and error\r\n * @param result  result of fetch operation\r\n * @param error possible error in fetch operation\r\n * @param crypto name of current cryptocurrency\r\n * @returns component\r\n */\r\nconst FetchStatusIndicator = (props: Props) => {\r\n  const { result, error, crypto } = props;\r\n  const showMessage = useMessage();\r\n\r\n  error && showMessage.error(`Podczas pobierania danych bieżących dla ${crypto} wystąpił błąd `);\r\n\r\n  if (!result) return <Loader />;\r\n\r\n  return null;\r\n};\r\n\r\nexport default FetchStatusIndicator;\r\n"],"names":["props","result","error","crypto","showMessage","useMessage"],"sourceRoot":""}