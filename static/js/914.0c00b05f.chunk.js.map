{"version":3,"file":"static/js/914.0c00b05f.chunk.js","mappings":"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","sources":["pages/SelectionPage/components/CryptoCurrencyDescription.tsx","pages/SelectionPage/components/BaseCurrencySelectForm.tsx","pages/SelectionPage/components/CryptoCurrencySelectForm.tsx","pages/SelectionPage/components/Logo.tsx","pages/SelectionPage/SelectionPage.tsx","pages/SelectionPage/styles/BaseCurrencyForm.tsx","pages/SelectionPage/styles/Description.tsx","pages/SelectionPage/styles/Legend.tsx"],"sourcesContent":["import Paper from \"@mui/material/Paper\";\r\nimport Fade from \"@mui/material/Fade\";\r\n\r\nimport { memo } from \"react\";\r\n\r\nimport { Description } from \"../styles\";\r\n\r\ninterface Props {\r\n    description: string;\r\n}\r\nconst CryptoCurrencyDescription = (props: Props) => {\r\n    const { description } = props;\r\n\r\n    return (\r\n        <Fade in={true} timeout={1000}>\r\n            <Paper elevation={1}>\r\n                <Description>{description}</Description>\r\n            </Paper>\r\n        </Fade>\r\n    );\r\n};\r\n\r\nexport default memo(CryptoCurrencyDescription);\r\n","import Radio from \"@mui/material/Radio\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\n\r\nimport { CurrencyBase } from \"types\";\r\nimport { BaseCurrencyForm, Legend } from \"../styles\";\r\n\r\ninterface BaseCurrencyChoiceType {\r\n    currencyBase: CurrencyBase | null;\r\n    setCurrencyBase: (arg0: CurrencyBase) => void;\r\n}\r\n/**\r\n * Creates form which alows choise of base currency\r\n * @param currencyBase base currency\r\n * @param setCurrencyBase: function which sets chosen base currency\r\n * @returns form component with radiogroup\r\n */\r\n\r\nconst BaseCurrencySelectForm = (props: BaseCurrencyChoiceType): JSX.Element => {\r\n    const { currencyBase, setCurrencyBase } = props;\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setCurrencyBase(event.target.value as CurrencyBase);\r\n    };\r\n\r\n    return (\r\n        <BaseCurrencyForm>\r\n            <Legend> Waluta odniesienia</Legend>\r\n            <RadioGroup aria-label=\"currency\" name=\"currency\" value={currencyBase} onChange={handleChange}>\r\n                <FormControlLabel value=\"PLN\" control={<Radio />} label=\"PLN\" />\r\n                <FormControlLabel value=\"USD\" control={<Radio />} label=\"USD\" />\r\n                <FormControlLabel value=\"EUR\" control={<Radio />} label=\"EUR\" />\r\n            </RadioGroup>\r\n        </BaseCurrencyForm>\r\n    );\r\n};\r\n\r\nexport default BaseCurrencySelectForm;\r\n","import * as React from \"react\";\r\nimport VirtualizedSelect from \"react-virtualized-select\";\r\n\r\nimport { CurrencyCrypto } from \"types\";\r\nimport { useConvertibleCryptos } from \"store\";\r\n\r\nimport \"../styles/_CryptoCurrencySelectForm.scss\";\r\n\r\ninterface Props {\r\n    setCurrencyCrypto: (arg0: CurrencyCrypto) => void;\r\n    currencyCrypto: CurrencyCrypto | undefined;\r\n}\r\n\r\nfunction createLabelStyle(cryptos: Omit<CurrencyCrypto, \"imageURL\">[] | undefined) {\r\n    return cryptos && cryptos.length ? \"\" : \"inactivatedSelect\"; /// todo to wygląda dziwnie a służy chyba tylko do dezaktywacji vistualselecta\r\n}\r\n/**\r\n * Creates form which alows choise of cryptocurrency\r\n * @param currencyCrypto base currency\r\n * @param setCurrencyCrypto function which sets chosen base currency\r\n * @returns form component with radiogroup or null if list of cryptos is not available\r\n */\r\nconst CryptoCurrencySelectForm: React.FC<Props> = props => {\r\n    const { currencyCrypto, setCurrencyCrypto } = props;\r\n    const availableCryptos = useConvertibleCryptos.use.convertibleCryptos();\r\n    const labelClass = React.useMemo(() => createLabelStyle(availableCryptos), [JSON.stringify(availableCryptos)]); //todo to wygląda dziwnie\r\n\r\n    return (\r\n        <>\r\n            <label className={labelClass}>\r\n                <VirtualizedSelect\r\n                    value={currencyCrypto}\r\n                    className=\"virtualized-select\"\r\n                    placeholder=\"Wybierz kryptowalutę\"\r\n                    onChange={(selectValue: CurrencyCrypto) => {\r\n                        setCurrencyCrypto(selectValue);\r\n                    }}\r\n                    options={availableCryptos}\r\n                />\r\n            </label>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CryptoCurrencySelectForm;\r\n","import { memo } from \"react\";\r\n\r\nimport \"../styles/_logo.scss\";\r\n\r\nconst Logo = memo(() => (\r\n    <header className=\"logo\">\r\n        <h1>CryptoCurrency Tracker</h1>\r\n    </header>\r\n));\r\n\r\nexport default Logo;\r\n","import { lazy, Suspense } from \"react\";\r\nimport { Stack } from \"@mui/material\";\r\n\r\nimport { BlueButton } from \"components\";\r\nimport { CurrencyBase, CurrencyCrypto, Selection } from \"types\";\r\nimport { useCheckApiKey, useConfirmChoice, useDebouncedCallback, useEnhancedState, useGetConvertibles } from \"hooks\";\r\nimport { CryptoCurrencySelectForm, BaseCurrencySelectForm, Logo } from \"./components\";\r\n\r\nconst Description = lazy(() => import(\"./components/CryptoCurrencyDescription\"));\r\n\r\nconst SelectionPage = () => {\r\n    const isApiKeyAvailable = useCheckApiKey();\r\n    const [currencyBase, setCurrencyBase] = useEnhancedState<CurrencyBase | null>(null);\r\n    const [currencyCrypto, setCurrencyCrypto] = useEnhancedState<CurrencyCrypto | undefined>(undefined);\r\n    const { confirmChoice, isEnabled } = useConfirmChoice({ currencyBase, currencyCrypto } as Selection);\r\n    const handleClick = useDebouncedCallback<HTMLButtonElement>(confirmChoice, undefined);\r\n    useGetConvertibles();\r\n\r\n    if (!isApiKeyAvailable) return null;\r\n    return (\r\n        <main>\r\n            <Stack spacing={2} sx={{ alignItems: \"center\" }}>\r\n                <Logo />\r\n                <BlueButton\r\n                    classes={isEnabled ? \"enabled\" : \"\"}\r\n                    isEnabled={isEnabled}\r\n                    clickHandler={handleClick}\r\n                    label=\"Pokaż kurs\"\r\n                />\r\n\r\n                <BaseCurrencySelectForm currencyBase={currencyBase} setCurrencyBase={setCurrencyBase} />\r\n                <CryptoCurrencySelectForm\r\n                    currencyCrypto={currencyCrypto}\r\n                    setCurrencyCrypto={setCurrencyCrypto}\r\n                    aria-label=\"Wybierz kryptowalutę\"\r\n                />\r\n                {currencyCrypto?.description && (\r\n                    <Suspense fallback={null}>\r\n                        <Description description={currencyCrypto.description} />\r\n                    </Suspense>\r\n                )}\r\n            </Stack>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default SelectionPage;\r\n","import Form from \"@mui/material/FormControl\";\n\nimport { styled } from \"@mui/system\";\n\nexport const BaseCurrencyForm = styled(Form)(({ theme }) => ({\n    borderRadius: \"2px\",\n    animation: \"fade_in 0.1s ease-in-out forwards\",\n    border: `2px solid`,\n    borderColor: theme.palette.secondary.main,\n    padding: theme.spacing(2.5),\n    width: \"300px\",\n    boxShadow: `inset 0 0 5px ${theme.palette.secondary.light}, 0 1px 2px rgba(0,0,0,0.07), 0 2px 4px rgba(0,0,0,0.07), 0 4px 8px rgba(0,0,0,0.07), 0 8px 16px rgba(0,0,0,0.07), 0 16px 32px rgba(0,0,0,0.07), 0 32px 64px rgba(0,0,0,0.07)`,\n    backgroundColor: theme.palette.secondary.light,\n    color: theme.palette.common.white,\n    tabIndex: \"0\",\n    \"&:hover\": { borderColor: theme.palette.primary.main },\n    \"& .MuiFormLabel-root\": { color: \"white\", fontFamily: '\"Lato\", sans-serif', paddingBottom: theme.spacing(0.6) },\n    \"& .MuiFormGroup-root\": { flexDirection: \"row\", justifyContent: \"space-around\" },\n}));\n\nexport default BaseCurrencyForm;\n","import { styled } from \"@mui/system\";\nimport { Box } from \"@mui/material\";\n\nexport const Description = styled(Box)(({ theme }) => ({\n    backgroundColor: theme.palette.primary.light,\n    width: \"300px\",\n    color: theme.palette.common.white,\n    borderRadius: 1,\n    padding: theme.spacing(2),\n    border: \"2px solid\",\n    borderColor: theme.palette.primary.dark,\n    boxShadow: `inset 0 0 5px ${theme.palette.primary.dark}, 0 1px 2px rgba(0,0,0,0.07), 0 2px 4px rgba(0,0,0,0.07), 0 4px 8px rgba(0,0,0,0.07), 0 8px 16px rgba(0,0,0,0.07), 0 16px 32px rgba(0,0,0,0.07), 0 32px 64px rgba(0,0,0,0.07)`,\n}));\nexport default Description;\n","import FormLabel from \"@mui/material/FormLabel\";\nimport { styled } from \"@mui/system\";\n\nexport const Legend = styled(FormLabel)(({ theme }) => ({\n    textAlign: \"center\",\n    color: theme.palette.common.white,\n    \"&:focus\": { color: theme.palette.common.white },\n    \"&.Mui-focused\": { color: theme.palette.common.white },\n}));\n\nexport default Legend;\n"],"names":["CryptoCurrencyDescription","props","description","in","timeout","elevation","memo","currencyBase","setCurrencyBase","RadioGroup","name","value","onChange","event","target","FormControlLabel","control","Radio","label","currencyCrypto","setCurrencyCrypto","availableCryptos","useConvertibleCryptos","labelClass","React","createLabelStyle","cryptos","length","JSON","stringify","className","placeholder","selectValue","options","Description","lazy","isApiKeyAvailable","useCheckApiKey","useEnhancedState","undefined","confirmChoice","isEnabled","useConfirmChoice","handleClick","useDebouncedCallback","useGetConvertibles","Stack","spacing","sx","alignItems","classes","clickHandler","Suspense","fallback","styled","Form","theme","borderRadius","animation","border","borderColor","palette","secondary","main","padding","width","boxShadow","light","backgroundColor","color","common","white","tabIndex","primary","fontFamily","paddingBottom","flexDirection","justifyContent","Box","dark","FormLabel","textAlign"],"sourceRoot":""}