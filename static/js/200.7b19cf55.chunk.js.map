{"version":3,"file":"static/js/200.7b19cf55.chunk.js","mappings":"4KA+BA,UAf6B,SAACA,GAC5B,IAAQC,EAA0BD,EAA1BC,OAAQC,EAAkBF,EAAlBE,MAAOC,EAAWH,EAAXG,OACfC,GAAoBC,EAAAA,EAAAA,MAApBD,gBAQR,OANIF,GACFE,EAAgB,qDAAD,OAA4CD,EAA5C,uCAAqE,CAClFG,QAAS,UAIRL,EAEE,MAFa,SAAC,KAAD","sources":["pages/ResultsPage/parts/FetchStatusIndicator.tsx"],"sourcesContent":["import { useSnackbar } from \"notistack\";\r\n\r\nimport { Loader } from \"components\";\r\n\r\ninterface Props {\r\n  result: boolean;\r\n  error: unknown;\r\n  crypto: string;\r\n}\r\n/**\r\n * creates indicators for loading and error\r\n * @param result  result of fetch operation\r\n * @param error possible error in fetch operation\r\n * @param crypto name of current cryptocurrency\r\n * @returns component\r\n */\r\nconst FetchStatusIndicator = (props: Props) => {\r\n  const { result, error, crypto } = props;\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  if (error) {\r\n    enqueueSnackbar(`Podczas pobierania danych bieżących dla ${crypto} wystąpił błąd `, {\r\n      variant: \"error\",\r\n    });\r\n  }\r\n\r\n  if (!result) return <Loader />;\r\n\r\n  return null;\r\n};\r\n\r\nexport default FetchStatusIndicator;\r\n"],"names":["props","result","error","crypto","enqueueSnackbar","useSnackbar","variant"],"sourceRoot":""}