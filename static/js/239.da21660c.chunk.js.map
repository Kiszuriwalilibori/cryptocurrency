{"version":3,"file":"static/js/239.da21660c.chunk.js","mappings":"kNAgCA,EAnBgB,SAACA,GACf,IAAQC,EAAiBD,EAAjBC,aAER,OACE,8BACGA,EAAaC,KAAI,SAAAC,GAAM,OACtB,iBAAKC,UAAU,OAAM,WACnB,gBAAKA,UAAU,QAAO,SACnBC,OAAOC,OAAOH,GAAQ,IADGI,QAG5B,gBAAKH,UAAU,OAAM,SAClBC,OAAOG,KAAKL,GAAQ,IADII,SAJFA,MAOrB,KAId,ECRA,EAXqB,SAACP,GACpB,IAAQS,EAAiBT,EAAjBS,aAER,OACE,iBAAKL,UAAU,OAAM,WACnB,gBAAKA,UAAU,QAAO,SAAEC,OAAOC,OAAOG,GAAc,MACpD,gBAAKL,UAAU,OAAM,SAAEC,OAAOG,KAAKC,GAAc,OAGvD,E,UCEA,GAXoBC,EAAAA,EAAAA,OAAK,SAACV,GACxB,IAAQW,EAASX,EAATW,KACR,OACE,iBAAKP,UAAU,qBAAoB,WACjC,gBAAKA,UAAU,QAAO,SAAEO,KACxB,gBAAKP,UAAU,aAAY,mBAAKO,EAAI,kBACpC,gBAAKP,UAAU,WAAU,SAAC,iCAGhC,I,8BCTMQ,EAAe,WACjB,OACI,gBAAKR,UAAU,OAAM,UACjB,gBAAKA,UAAU,gBAAe,UAC1B,SAACS,EAAA,EAAO,CACJC,gBAAiB,CAAEC,QAAS,CAAEC,GAAIC,EAAAA,KAClCC,MAAM,gEACNC,UAAU,YAAW,UAErB,SAACC,EAAA,EAAM,CAACC,QAAQ,YAAYC,MAAM,QAAQC,KAAK,QAAO,SAAC,kBAO3E,EAEA,GAAeb,EAAAA,EAAAA,MAAKE,G,UCXpB,EARa,SAACZ,GACZ,IAAQwB,EAAQxB,EAARwB,IAEDC,EAAgBC,EAAAA,GAAAA,IAAY,WAAaF,EAAM,YAEtD,OAAO,gBAAKpB,UAAU,OAAOuB,IAAKF,EAAeG,IAAK,GAAI,aAAY,6BACxE,E,oBC0BA,EApBqB,SAAC5B,GAClB,IAAQ6B,EAA4B7B,EAA5B6B,eAAgBC,EAAY9B,EAAZ8B,QAExB,OACI,SAACC,EAAA,EAAG,CAACf,GAAIgB,EAAAA,GAAgB,UACrB,SAACC,EAAA,EAAI,CAACC,IAAI,EAAMC,QAAS,IAAK,UAC1B,iBAAK/B,UAAU,gBAAe,WAC1B,SAACgC,EAAkB,CAACzB,KAAMkB,EAAeQ,QACxCR,EAAeS,QAAS,SAAC,EAAI,CAACd,IAAKK,EAAeS,SACnD,iBAAKlC,UAAU,oBAAmB,UAC7B0B,EAASrB,eAAgB,SAAC,EAAY,CAACA,aAAcqB,EAASrB,eAC9DqB,EAASS,UAAW,SAAC,EAAO,CAACtC,aAAc6B,EAASS,WACrD,SAAC,EAAY,aAMrC,C","sources":["pages/ResultsPage/parts/Changes/Changes.tsx","pages/ResultsPage/parts/CurrentPrice/CurrentPrice.tsx","pages/ResultsPage/parts/GeneralInformation/GeneralInformation.tsx","pages/ResultsPage/parts/InvestButton/InvestButton.tsx","pages/ResultsPage/parts/Logo.tsx","pages/ResultsPage/parts/ResultsTable.tsx"],"sourcesContent":["import uuid from \"react-uuid\";\r\n\r\nimport { ChangesArray } from \"types\";\r\n\r\ninterface Props {\r\n  changesArray: ChangesArray;\r\n}\r\n/**\r\n * Creates table with historical price and percentage change\r\n * @param changesArray data to be displayed\r\n * @returns component with tabelarised data\r\n */\r\n\r\nconst Changes = (props: Props): JSX.Element => {\r\n  const { changesArray } = props;\r\n\r\n  return (\r\n    <>\r\n      {changesArray.map(change => (\r\n        <div className=\"cell\" key={uuid()}>\r\n          <div className=\"value\" key={uuid()}>\r\n            {Object.values(change)[0]}\r\n          </div>\r\n          <div className=\"name\" key={uuid()}>\r\n            {Object.keys(change)[0]}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Changes;\r\n","import \"./_CurrentPrice.scss\";\r\n\r\n/**\r\n * Displays cell with current cryptocurrency price\r\n * @param props object with current cryptocurrency price data\r\n * @returns component\r\n */\r\ninterface Props {\r\n  currentPrice: { [key: string]: string };\r\n}\r\n\r\nconst CurrentPrice = (props: Props) => {\r\n  const { currentPrice } = props;\r\n\r\n  return (\r\n    <div className=\"cell\">\r\n      <div className=\"value\">{Object.values(currentPrice)[0]}</div>\r\n      <div className=\"name\">{Object.keys(currentPrice)[0]}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentPrice;\r\n","import { memo } from \"react\";\r\nimport \"./_generalInformation.scss\";\r\n\r\ninterface Props {\r\n  name: string;\r\n}\r\n/**\r\n * Renders general information about cryptocurrency\r\n * @param {string} name cryptocurrency nam\r\n * @returns memoised component\r\n */\r\nconst GeneralInfo = memo((props: Props) => {\r\n  const { name } = props;\r\n  return (\r\n    <div className=\"GeneralInformation\">\r\n      <div className=\"title\">{name}</div>\r\n      <div className=\"foundation\">{`${name} foundation`}</div>\r\n      <div className=\"altcoins\">Altcoins - hightest growth</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default GeneralInfo;\r\n","import { memo } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport { tooltipStyle } from \"styles/sxStyles\";\r\n\r\nimport \"./_InvestButton.scss\";\r\n\r\n/**\r\n * creates button which could be in the future used for investing\r\n * @returns button component\r\n */\r\nconst InvestButton = () => {\r\n    return (\r\n        <div className=\"cell\">\r\n            <div className=\"InvestWrapper\">\r\n                <Tooltip\r\n                    componentsProps={{ tooltip: { sx: tooltipStyle } }}\r\n                    title=\"Ta funkcjonalność nie jest jeszcze zaimplementowana\"\r\n                    placement=\"top-start\"\r\n                >\r\n                    <Button variant=\"contained\" color=\"error\" size=\"small\">\r\n                        Inwestuj\r\n                    </Button>\r\n                </Tooltip>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(InvestButton);\r\n","import { baseURL } from \"config\";\r\n\r\ninterface Props {\r\n  URL: string;\r\n}\r\n/**\r\n * creates Logo of cryptocurrency. Firstly createscomplete URL\r\n * @param URL string being critical part of URL\r\n * @returns logo component\r\n */\r\nconst Logo = (props: Props) => {\r\n  const { URL } = props;\r\n  \r\n   const cryptoLogoUrl = baseURL.get(\"general\") + URL + \"?width=30\";\r\n\r\n  return <img className=\"logo\" src={cryptoLogoUrl} alt={\"\"} aria-label={\"cryptocurrency logo image\"} />;\r\n};\r\n\r\nexport default Logo;\r\n","import Changes from \"./Changes\";\r\nimport CurrentPrice from \"./CurrentPrice\";\r\nimport GeneralInformation from \"./GeneralInformation\";\r\nimport InvestButton from \"./InvestButton\";\r\nimport Logo from \"./Logo\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nimport { Grow } from \"@mui/material\";\r\nimport { cryptoContainer } from \"styles/sxStyles\";\r\nimport { CurrencyCrypto, ResultsType } from \"types\";\r\n\r\nimport \"./_ResultsTable.scss\";\r\n\r\ninterface Props {\r\n    currencyCrypto: CurrencyCrypto;\r\n    results: ResultsType;\r\n}\r\n/**\r\n * creates array with all provided informations about crypto\r\n * @param props\r\n * @returns\r\n */\r\nconst ResultsTable = (props: Props) => {\r\n    const { currencyCrypto, results } = props;\r\n\r\n    return (\r\n        <Box sx={cryptoContainer}>\r\n            <Grow in={true} timeout={1000}>\r\n                <div className=\"DataContainer\">\r\n                    <GeneralInformation name={currencyCrypto.label} />\r\n                    {currencyCrypto.image && <Logo URL={currencyCrypto.image} />}\r\n                    <div className=\"PricesWithButtons\">\r\n                        {results!.currentPrice && <CurrentPrice currentPrice={results!.currentPrice} />}\r\n                        {results!.changes && <Changes changesArray={results!.changes} />}\r\n                        <InvestButton />\r\n                    </div>\r\n                </div>\r\n            </Grow>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default ResultsTable;\r\n"],"names":["props","changesArray","map","change","className","Object","values","uuid","keys","currentPrice","memo","name","InvestButton","Tooltip","componentsProps","tooltip","sx","tooltipStyle","title","placement","Button","variant","color","size","URL","cryptoLogoUrl","baseURL","src","alt","currencyCrypto","results","Box","cryptoContainer","Grow","in","timeout","GeneralInformation","label","image","changes"],"sourceRoot":""}