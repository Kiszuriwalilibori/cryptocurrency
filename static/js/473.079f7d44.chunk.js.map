{"version":3,"file":"static/js/473.079f7d44.chunk.js","mappings":"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","sources":["components/BlueButton/BlueButton.tsx","components/Loader.tsx","hooks/useFetchHistoricalPrices.ts","resources/errorDictionary.ts","hooks/useMessage.ts","hooks/useCheckApiKey.ts","hooks/useConfirm.ts","pages/ResultsPage/ResultsPage.tsx","styles/sxStyles.js","../node_modules/@mui/system/esm/createBox.js","../node_modules/@mui/material/Box/Box.js"],"sourcesContent":["import \"./_BlueButton.scss\";\r\n\r\ninterface Props {\r\n  classes?: string;\r\n  isEnabled?: boolean;\r\n  clickHandler?: React.MouseEventHandler<HTMLButtonElement> | undefined;\r\n  label?: string;\r\n}\r\n\r\nconst BlueButton = (props: Props) => {\r\n  const { classes = \"enabled\", isEnabled = true, clickHandler = () => {}, label = \"\" } = props;\r\n  const baseClassName = \"BlueButton\";\r\n\r\n  return (\r\n    <button className={`${baseClassName} ${classes}`} onClick={clickHandler} disabled={!isEnabled}>\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default BlueButton;\r\n","import Box from \"@mui/material/Box\";\r\nimport Progress from \"@mui/material/CircularProgress\";\r\n\r\nimport { memo } from \"react\";\r\nimport { progressStyle, loaderContainerStyle } from \"styles/sxStyles\";\r\n\r\n/**\r\n * creates memoised spinner that indicates loading state\r\n * @returns spinner component\r\n */\r\nconst Loader = memo(() => {\r\n    return (\r\n        <Box sx={{ ...loaderContainerStyle }}>\r\n            <Progress sx={{ ...progressStyle }} thickness={5} size={100} />\r\n        </Box>\r\n    );\r\n});\r\n\r\nexport default Loader;\r\n","import axios from \"axios\";\r\n\r\nimport { useState, useCallback } from \"react\";\r\n\r\nimport { BaseCurrency, CurrencyCrypto, HistoricalPrices, NotAvailable } from \"types\";\r\nimport { CreateURL } from \"functions\";\r\nimport { useMessage } from \"hooks\";\r\n\r\nconst useFetchHistoricalPrices = () => {\r\n  const [data, setData] = useState<HistoricalPrices | null>(null);\r\n  const [error, setError] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const showMessage = useMessage();\r\n\r\n  let historicalPrices: HistoricalPrices = [];\r\n\r\n  const fatalError = useCallback(() => {\r\n    setError(true);\r\n    showMessage.error(`No data fetched at all for given endpoints`);\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const theEndOfRecursiveFetchLoopHandle = () => {\r\n    setLoading(false);\r\n\r\n    if (historicalPrices.length) {\r\n      setData(historicalPrices);\r\n    } else {\r\n      fatalError();\r\n    }\r\n  };\r\n\r\n  const fetchData = async (endpoints: string[], baseCurrency: BaseCurrency) => {\r\n    if (endpoints.length) {\r\n      let URL = endpoints.shift();\r\n      let reducedEndpoints = [...endpoints]; \r\n\r\n      axios\r\n        .get(URL as string, { Apikey: process.env.REACT_APP_API_KEY as string })\r\n        .then(data => {\r\n          if (data.hasOwnProperty(\"data\")) {\r\n            if (data.data.hasOwnProperty(baseCurrency)) {\r\n              historicalPrices.push(data.data[baseCurrency]);\r\n            } else {\r\n              historicalPrices.push(NotAvailable.na);\r\n            }\r\n\r\n            if (reducedEndpoints.length) {\r\n              fetchData(reducedEndpoints, baseCurrency);\r\n            } else {\r\n              theEndOfRecursiveFetchLoopHandle();\r\n            }\r\n          } else {\r\n            setLoading(false);\r\n            const label = URL ? URL : \"unknown location\";\r\n            showMessage.warning(`Data for ${label} was broken, corrupted or otherwise invalid`);\r\n          }\r\n        })\r\n        .catch(err => {\r\n          let code = err.response ? err.response.status : err;\r\n          showMessage.warning(`Error ${code} encountered when fetching data for ${URL}`);\r\n          if (reducedEndpoints.length) {\r\n            fetchData(reducedEndpoints, baseCurrency);\r\n          } else {\r\n            theEndOfRecursiveFetchLoopHandle();\r\n          }\r\n        });\r\n    } else {\r\n      setError(true);\r\n      showMessage.error(`Empty array of URLs passed to useAxiosArray as argument`);\r\n    }\r\n  };\r\n  const fetchHistoricalPrices = (currencyCrypto: CurrencyCrypto, baseCurrency: BaseCurrency) => {\r\n    fetchData(CreateURL.historical(currencyCrypto, baseCurrency), baseCurrency);\r\n  };\r\n\r\n  return { data, error, loading, fetchHistoricalPrices };\r\n};\r\n\r\nexport default useFetchHistoricalPrices;\r\n","/**\r\n * Not in use. perhaps in the future\r\n */\r\n\r\nlet errorDictionary: { [key: string]: string } = {\r\n  404: \"Not found\",\r\n};\r\n\r\nerrorDictionary = new Proxy(errorDictionary, {\r\n  get(target, phrase: string) {\r\n    if (phrase in target) {\r\n      return target[phrase];\r\n    } else {\r\n      return phrase;\r\n    }\r\n  },\r\n});\r\n\r\nexport default errorDictionary;\r\n","import { useSnackbar } from \"notistack\";\r\n\r\nconst useMessage = () => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const showMessage = {\r\n    info: function (str: string) {\r\n      enqueueSnackbar(str, { variant: \"info\" });\r\n    },\r\n\r\n    error: function (str: string) {\r\n      enqueueSnackbar(str, { variant: \"error\" });\r\n    },\r\n\r\n    success: function (str: string) {\r\n      enqueueSnackbar(str, { variant: \"success\" });\r\n    },\r\n\r\n    warning: function (str: string) {\r\n      enqueueSnackbar(str, { variant: \"warning\" });\r\n    },\r\n  };\r\n\r\n  return showMessage;\r\n};\r\n\r\nexport default useMessage;\r\n","import { useRef } from \"react\";\r\nimport { useMessage } from \"hooks\";\r\n\r\nconst useCheckApiKey = () => {\r\n    const showMessage = useMessage();\r\n\r\n    const isAPIKeyAvailable = useRef(false);\r\n\r\n    if (!process.env.REACT_APP_API_KEY) {\r\n        showMessage.error(`No API key available for application`);\r\n    } else {\r\n        isAPIKeyAvailable.current = true;\r\n    }\r\n    return isAPIKeyAvailable.current;\r\n};\r\n\r\nexport default useCheckApiKey;\r\n","import { useContext, useCallback } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { BaseCurrency, CurrencyCrypto } from \"types\";\r\nimport { SelectedCurrenciesContext } from \"contexts/currenciesContext\";\r\n\r\ninterface Props {\r\n    currencyBase: BaseCurrency;\r\n    currencyCrypto: CurrencyCrypto;\r\n}\r\n/**\r\n * Creates button which - when clicked - accepts chosen currencies to context and switches to page wit results\r\n * @param props currency base: base currency, currencyCrypto: cryptocurrency\r\n * @returns button component\r\n */\r\nconst useConfirmChoice = (props: Props) => {\r\n    const { currencyBase, currencyCrypto } = props;\r\n    const navigate = useNavigate();\r\n    const { setCurrencyBase, setCurrencyCrypto } = useContext(SelectedCurrenciesContext);\r\n    const isEnabled = currencyBase && currencyCrypto ? true : false;\r\n    const pathToResults = isEnabled ? `exchange rate for pair ${currencyCrypto.label}:${currencyBase}` : undefined;\r\n\r\n    const confirmChoice = useCallback(() => {\r\n        setCurrencyBase(currencyBase);\r\n        setCurrencyCrypto(currencyCrypto);\r\n        if (pathToResults) navigate(pathToResults, { state: { results: pathToResults } });\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [pathToResults]);\r\n\r\n    return { confirmChoice, isEnabled };\r\n};\r\n\r\nexport default useConfirmChoice;\r\n","import * as React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useFetchHistoricalPrices, useMessage } from \"hooks\";\r\nimport { BlueButton } from \"components\";\r\nimport { CreateURL, hasDateChanged, createResults } from \"functions\";\r\nimport { ResultsType, CryptoPrice } from \"types\";\r\nimport { initialIntervalMs } from \"../../config\";\r\nimport { SelectedCurrenciesContext } from \"contexts/currenciesContext\";\r\n\r\nconst ResultsTable = React.lazy(() => import(\"./parts/ResultsTable\"));\r\nconst FetchStatusIndicator = React.lazy(() => import(\"./parts/FetchStatusIndicator\"));\r\n\r\n/**\r\n * Presents cryptocurrency price current and historical\r\n * @returns component\r\n */\r\nconst ResultsPage = (): JSX.Element => {\r\n  const navigate = useNavigate();\r\n  const showMessage = useMessage();\r\n  const { currencyBase, currencyCrypto } = React.useContext(SelectedCurrenciesContext); // tu przemianować na selectedBaseCurrency i selectedCryptoCurrency\r\n  const intervalMs = initialIntervalMs;\r\n  const currentURL = CreateURL.current(currencyCrypto.value, currencyBase);\r\n  const [results, setResults] = React.useState<ResultsType | null>(null);\r\n\r\n  const { data: fetchedCryptocurrencyPrice, error } = useQuery(\r\n    \"currentCrypto\",\r\n    async () => {\r\n      if (hasDateChanged(intervalMs)) {\r\n        fetchHistoricalPrices(currencyCrypto, currencyBase);\r\n      }\r\n      const result = await axios.get(currentURL, { Apikey: process.env.REACT_APP_API_KEY });\r\n\r\n      return result.data;\r\n    },\r\n    {\r\n      refetchInterval: intervalMs,\r\n    }\r\n  );\r\n\r\n  const { data: historicalCryptoPrice, fetchHistoricalPrices } = useFetchHistoricalPrices();\r\n\r\n  const returnToSelectionPage = React.useCallback(() => {\r\n    navigate(\"/\");\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    fetchHistoricalPrices(currencyCrypto, currencyBase);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (fetchedCryptocurrencyPrice && historicalCryptoPrice) {\r\n      let cryptoPrice = fetchedCryptocurrencyPrice[currencyBase] as CryptoPrice;\r\n\r\n      if (typeof cryptoPrice === \"number\") showMessage.success(\"Zmiana\");\r\n      else showMessage.info(\"Na serwerze nie ma danych o bieżącym kursie kryptowaluty\");\r\n\r\n      const result = createResults({ cryptoPrice, historicalCryptoPrice, currencyBase });\r\n      if (JSON.stringify(results) !== JSON.stringify(result)) {\r\n        setResults(result);\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [fetchedCryptocurrencyPrice, historicalCryptoPrice]);\r\n\r\n  return (\r\n    <>\r\n      {(error || !results) && (\r\n        <React.Suspense fallback={null}>\r\n          <FetchStatusIndicator crypto={currencyCrypto.label} result={Boolean(results)} error={error} />\r\n        </React.Suspense>\r\n      )}\r\n      <BlueButton label=\"Powrót do wyboru\" clickHandler={returnToSelectionPage} />\r\n      {results && (\r\n        <React.Suspense fallback={null}>\r\n          <ResultsTable currencyCrypto={currencyCrypto} results={results} />\r\n        </React.Suspense>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResultsPage;\r\n","export const localBrown = \"#EE760A\";\r\nexport const localGrey = \"#1E1F26\";\r\n\r\nexport const progressStyle = {\r\n    color: \"rgba(122, 194, 33, 0.8);\",\r\n};\r\n\r\nexport const loaderContainerStyle = {\r\n    margin: \"0 auto\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    height: \"100vh\",\r\n    alignItems: \"center\",\r\n    background: \"transparent\",\r\n    paddingTop: \"10vh\",\r\n    justifyContent: \"center\",\r\n};\r\n\r\nexport const tooltipStyle = {\r\n    backgroundColor: \"#F5C200\",\r\n    border: `1px solid ${localBrown}`,\r\n    boxShadow: `inset 0 0 5px ${localBrown}`,\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    fontSize: 11,\r\n};\r\n\r\nexport const cryptoContainer = {\r\n    width: \"100%\",\r\n    paddingRight: \"15px\",\r\n    paddingLeft: \"15px\",\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    marginTop: \"30vh\",\r\n};\r\n\r\nexport const formStyle = {\r\n    borderRadius: \"2px\",\r\n    animation: \"fade_in 0.1s ease-in-out forwards\",\r\n    border: `2px solid ${localGrey}`,\r\n    padding: \"20px\",\r\n    width: \"300px\",\r\n    margin: \"2vh 0\",\r\n    boxShadow: `inset 0 0 5px ${localGrey}, 0 1px 2px rgba(0,0,0,0.07), 0 2px 4px rgba(0,0,0,0.07), 0 4px 8px rgba(0,0,0,0.07), 0 8px 16px rgba(0,0,0,0.07), 0 16px 32px rgba(0,0,0,0.07), 0 32px 64px rgba(0,0,0,0.07)`,\r\n    backgroundColor: \"#2C303A\",\r\n    color: \"white\",\r\n    tabindex: \"0\",\r\n    \"&:hover\": { border: `2px solid ${localBrown}` },\r\n    \"&:focus\": { border: \"2px solid red\" },\r\n    \"& .MuiFormLabel-root\": { color: \"white\", fontFamily: '\"Lato\", sans-serif', paddingBottom: \"5px\" },\r\n    \"& .MuiFormGroup-root\": { flexDirection: \"row\", justifyContent: \"space-around\" },\r\n};\r\n\r\nexport const radioStyle = {\r\n    \"&.Mui-checked\": {\r\n        color: localBrown,\r\n    },\r\n};\r\n\r\nexport const legendStyle = {\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    \"&:focus\": { color: \"white\" },\r\n    \"&.Mui-focused\": { color: \"white\" },\r\n};\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport styleFunctionSx, { extendSxProp } from './styleFunctionSx';\nimport useTheme from './useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName\n  } = options;\n  const BoxRoot = styled('div', {\n    shouldForwardProp: prop => prop !== 'theme' && prop !== 'sx' && prop !== 'as'\n  })(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n    const _extendSxProp = extendSxProp(inProps),\n      {\n        className,\n        component = 'div'\n      } = _extendSxProp,\n      other = _objectWithoutPropertiesLoose(_extendSxProp, _excluded);\n    return /*#__PURE__*/_jsx(BoxRoot, _extends({\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: theme\n    }, other));\n  });\n  return Box;\n}","import { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  defaultTheme,\n  defaultClassName: 'MuiBox-root',\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;"],"names":["props","classes","isEnabled","clickHandler","label","className","onClick","disabled","memo","Box","sx","loaderContainerStyle","progressStyle","thickness","size","useState","data","setData","error","setError","loading","setLoading","showMessage","useMessage","historicalPrices","fatalError","useCallback","theEndOfRecursiveFetchLoopHandle","length","fetchData","endpoints","baseCurrency","URL","shift","reducedEndpoints","axios","Apikey","process","then","hasOwnProperty","push","NotAvailable","warning","catch","err","code","response","status","fetchHistoricalPrices","currencyCrypto","CreateURL","errorDictionary","Proxy","get","target","phrase","enqueueSnackbar","useSnackbar","info","str","variant","success","isAPIKeyAvailable","useRef","current","currencyBase","navigate","useNavigate","useContext","SelectedCurrenciesContext","setCurrencyBase","setCurrencyCrypto","pathToResults","undefined","confirmChoice","state","results","ResultsTable","React","FetchStatusIndicator","intervalMs","initialIntervalMs","currentURL","value","setResults","useQuery","hasDateChanged","result","refetchInterval","fetchedCryptocurrencyPrice","useFetchHistoricalPrices","historicalCryptoPrice","returnToSelectionPage","cryptoPrice","createResults","JSON","stringify","fallback","crypto","Boolean","localBrown","localGrey","color","margin","display","flexDirection","height","alignItems","background","paddingTop","justifyContent","tooltipStyle","backgroundColor","border","boxShadow","fontSize","cryptoContainer","width","paddingRight","paddingLeft","marginRight","marginLeft","marginTop","formStyle","borderRadius","animation","padding","tabindex","fontFamily","paddingBottom","radioStyle","legendStyle","textAlign","_excluded","options","defaultTheme","defaultClassName","generateClassName","BoxRoot","styled","shouldForwardProp","prop","styleFunctionSx","inProps","ref","theme","useTheme","_extendSxProp","extendSxProp","component","other","_objectWithoutPropertiesLoose","_jsx","_extends","as","clsx","createBox","createTheme","ClassNameGenerator"],"sourceRoot":""}